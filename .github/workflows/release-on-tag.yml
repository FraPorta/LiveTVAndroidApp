name: Release on Tag

on:
 push:
  tags:
   - 'v*.*.*' # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
 release:
  runs-on: ubuntu-latest

  steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Set up JDK 17
     uses: actions/setup-java@v4
     with:
      java-version: '17'
      distribution: 'temurin'

   - name: Cache Gradle dependencies
     uses: actions/cache@v4
     with:
      path: |
       ~/.gradle/caches
       ~/.gradle/wrapper
      key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
      restore-keys: |
       ${{ runner.os }}-gradle-

   - name: Make gradlew executable
     run: chmod +x gradlew

   - name: Build release and debug APKs
     run: |
      ./gradlew assembleRelease assembleDebug
      mkdir -p output
      cp app/build/outputs/apk/release/app-release.apk output/LiveTV-${{ github.ref_name }}-release.apk
      cp app/build/outputs/apk/debug/app-debug.apk output/LiveTV-${{ github.ref_name }}-debug.apk

   - name: Upload APK artifacts
     uses: actions/upload-artifact@v4
     with:
      name: LiveTV-APKs-${{ github.ref_name }}
      path: output/*.apk
      retention-days: 30

   - name: Create GitHub Release with APKs
     run: |
      gh release create ${{ github.ref_name }} \
        --title "LiveTV AndroidTV v${{ github.ref_name }}" \
        --notes "Release of LiveTV AndroidTV app v${{ github.ref_name }}
        
        ## What's Included
        - **LiveTV-${{ github.ref_name }}-release.apk** - Production release build
        - **LiveTV-${{ github.ref_name }}-debug.apk** - Debug build for testing
        
        ## Installation
        Download the release APK to your Android TV device and install via ADB or file manager." \
        output/LiveTV-${{ github.ref_name }}-release.apk \
        output/LiveTV-${{ github.ref_name }}-debug.apk
     env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
